# cdr completion                                           -*- shell-script -*-

# This bash completions script was generated by
# completely (https://github.com/dannyben/completely)
# Modifying it manually is not recommended

_cdr_completions_filter() {
  local words="$1"
  local cur=${COMP_WORDS[COMP_CWORD]}
  local result=()

  if [[ "${cur:0:1}" == "-" ]]; then
    echo "$words"
  
  else
    for word in $words; do
      [[ "${word:0:1}" != "-" ]] && result+=("$word")
    done

    echo "${result[*]}"

  fi
}

_cdr_completions() {
  local cur=${COMP_WORDS[COMP_CWORD]}
  local compwords=("${COMP_WORDS[@]:1:$COMP_CWORD-1}")
  local compline="${compwords[*]}"

  case "$compline" in
    'new-day'*)
      while read -r; do COMPREPLY+=( "$REPLY" ); done < <( compgen -W "$(_cdr_completions_filter "--config --context")" -- "$cur" )
      ;;

    'record'*)
      while read -r; do COMPREPLY+=( "$REPLY" ); done < <( compgen -W "$(_cdr_completions_filter "--loc --localisation --localization --location --where -l --intensity --level -i --more-context --info --information --description -c --date --when -d --config")" -- "$cur" )
      ;;

    'init'*)
      while read -r; do COMPREPLY+=( "$REPLY" ); done < <( compgen -W "$(_cdr_completions_filter "--config")" -- "$cur" )
      ;;

    *)
      while read -r; do COMPREPLY+=( "$REPLY" ); done < <( compgen -W "$(_cdr_completions_filter "record init new-day")" -- "$cur" )
      ;;

  esac
} &&
complete -F _cdr_completions cdr

# ex: filetype=sh
